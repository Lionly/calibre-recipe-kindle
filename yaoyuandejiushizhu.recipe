#!/usr/bin/env python
# vim:fileencoding=utf-8
from __future__ import unicode_literals, division, absolute_import, print_function
from calibre.web.feeds.news import BasicNewsRecipe

class book(BasicNewsRecipe):
    '''自定义的Recipe都继承自Calibre提供的基类BasicNewsRecipe，必须实现parse_index()方法
    '''
    # 电子书名称
    title = u'遥远的救世主'
    __author__ = u'豆豆'
    cover_url = 'https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=5e2d9aa094eef01f591910978197f240/b64543a98226cffcf4b59c76b9014a90f703ea53.jpg'
    description = u'''这是一部可以傲然独尊的长篇小说。也是一部可遇不可求的完美佳作。
豆豆，以她的才华，探索一个有机的、无定形的、陌生的、暧昧的和未曾臻达的世界。男女主人公那浓墨重彩的经历以及令人欷歔的爱情故事创造出了一种超然背叛的意志，而这意志是那样的静谧、清明。
效力于德国一家私募公司的商界怪才丁元英，用他超出常人的手段，将从德国募集的资金投进中国股市，用“文化密码”疯狂掠夺中国的钱财，后来又良心发现，退出了公司，但退出是要受到惩罚的，为此，他付出了惨痛的代价，他的所有分红被冻结，甚至穷到天天吃方便面。回到古城“隐居”时，认识了从小在法兰克福长大、如今在古城刑警队任职的女刑警队员芮小丹。两人从相识到相知，从一对音响发烧友演变成了一对爱情发烧友，上演了一出精彩、浪漫、传奇的天国之恋。
一个作家的品质，在豆豆身上达到了极至，作品主题的睿智和简约，出色地表现出佛学光耀和不蓄意的使人震惊！
本书改编拍摄成电视连续剧《天道》。'''
    timefmt = '[%Y-%m-%d]'
    # 最大章节数
    max_articles_per_feed = 1000
    # 设置每隔1s下载一个章节，默认值为0，当网络不好时，可以把这个值调大点
    delay = 0
    no_stylesheets = True
    # 抓取每一个页面中保留的tag [ dict(name='div', attrs={'class':'advert'}), dict(name='div', attrs={'class':'advert'}) ]
    keep_only_tags = [dict(name='p')]
    # 页面中删除的Tag
    # remove_tags=[{'class':'x-wiki-info'}]
    # 指定Tag之后的元素都被删除
    # remove_tags_after=[{'class':'x-wiki-content'}]

    def get_title(self, link):
        return link.contents[0].strip()

    url_prefix = 'http://www.kanunu8.com/book4/10523/'

    def parse_index(self):
        # index_to_soup()由BasicNewsRecipe实现，使用Beautifulsoup抓取一个网址，并获得这个网页内容的soup对象
        soup = self.index_to_soup(self.url_prefix)
        # 整块目录 table border="0" cellspacing="1" cellpadding="7" width="800" bgcolor="#d4d0c8" align="center"
        div = soup.find('table', {'border': '0', 'cellspacing': '1', 'cellpadding': '7', 'width': '800', 'bgcolor': '#d4d0c8', 'align': 'center'})
        # 找到每一个章节的标题和对应的URL，Calibre会下载每一个URL的html，使用上面的类属性进行解析
        articles = []
        for link in div.findAll('a'):
            a = {'title': self.get_title(link), 'url': self.url_prefix + link['href']}
            articles.append(a)
        # 返回一个列表，这个列表中是多个元组，每个元组是书的一卷('卷名称', articles)，每一卷中又有多个章节articles
        return [('遥远的救世主', articles)]
